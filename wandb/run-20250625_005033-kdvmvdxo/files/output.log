/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 12.40it/s]
num_shots is  1
num_shots is  1
Epoch 1 Loss: 1.8505
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 12.64it/s]
Epoch 1 best val f1 0.2857 test f1 0.3606020510196686
Epoch 2 Loss: 0.4594
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.73it/s]
Epoch 2 best val f1 0.4000 test f1 0.46983158588409424
Epoch 3 Loss: -0.0143
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 12.56it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.97it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.68it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.82it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.01it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.00it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.88it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.13it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.50it/s]
Epoch 3 best val f1 0.4348 test f1 0.5225011110305786
Epoch 4 Loss: -0.1713
Epoch 5 Loss: -0.3354
Epoch 6 Loss: -0.3673
Epoch 7 Loss: -0.3855
Epoch 8 Loss: -0.4008
Epoch 9 Loss: -0.4102
Epoch 10 Loss: -0.4158
Epoch 11 Loss: -0.4331
Epoch 12 Loss: -0.4539
Epoch 13 Loss: -0.4697
Epoch 14 Loss: -0.4834
Epoch 15 Loss: -0.4966
Epoch 16 Loss: -0.5098
Epoch 17 Loss: -0.5229
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.60it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.02it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.10it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.05it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.01it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.12it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.85it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.16it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.08it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.08it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.05it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.02it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.47it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.85it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.94it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.59it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.01it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.01it/s]
Epoch 18 Loss: -0.5360
Epoch 19 Loss: -0.5491
Epoch 20 Loss: -0.5621
Epoch 21 Loss: -0.5752
Epoch 22 Loss: -0.5883
Epoch 23 Loss: -0.6012
Epoch 24 Loss: -0.6140
Epoch 25 Loss: -0.6263
Epoch 26 Loss: -0.6385
Epoch 27 Loss: -0.6505
Epoch 28 Loss: -0.6625
Epoch 29 Loss: -0.6742
Epoch 30 Loss: -0.6857