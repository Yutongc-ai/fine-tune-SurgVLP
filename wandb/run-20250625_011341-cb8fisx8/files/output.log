/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
 14%|█████████▍                                                        | 1/7 [00:00<00:03,  1.56it/s]
num_shots is  64


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:04<00:00,  1.71it/s]
Epoch 1 Loss: 1.0837
 29%|██████████████████▊                                               | 2/7 [00:01<00:02,  1.97it/s]

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
  0%|                                                                          | 0/7 [00:00<?, ?it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 3 Loss: -0.2202
  0%|                                                                          | 0/7 [00:00<?, ?it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 4 Loss: -0.3720

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.97it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 6 Loss: -0.6243

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 8 Loss: -0.8012

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.96it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 10 Loss: -0.8891

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 12 Loss: -0.9292

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.97it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 14 Loss: -0.9478

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 16 Loss: -0.9582

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 17 Loss: -0.9621


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 18 Loss: -0.9646

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 19 Loss: -0.9674


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 20 Loss: -0.9651

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 21 Loss: -0.9690


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 22 Loss: -0.9698

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 23 Loss: -0.9727

 71%|███████████████████████████████████████████████▏                  | 5/7 [00:02<00:01,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 25 Loss: -0.9766

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 27 Loss: -0.9793
 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 29 Loss: -0.9816

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]