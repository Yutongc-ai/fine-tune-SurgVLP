/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  9.89it/s]
num_shots is  1
num_shots is  1
Epoch 1 Loss: 1.7661
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 13.25it/s]
Epoch 1 best val f1 0.2353 test f1 0.16404594480991364
Epoch 2 Loss: 0.3910
Epoch 3 Loss: -0.1830
Epoch 4 Loss: -0.2936
Epoch 5 Loss: -0.3483
Epoch 6 Loss: -0.3761
Epoch 7 Loss: -0.3946
Epoch 8 Loss: -0.4106
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.99it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.98it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.05it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.04it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.04it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.07it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.06it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.86it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.05it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.96it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.01it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.06it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.04it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.12it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.06it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.60it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.02it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.08it/s]
Epoch 9 Loss: -0.4260
Epoch 10 Loss: -0.4416
Epoch 11 Loss: -0.4573
Epoch 12 Loss: -0.4733
Epoch 13 Loss: -0.4894
Epoch 14 Loss: -0.5055
Epoch 15 Loss: -0.5217
Epoch 16 Loss: -0.5377
Epoch 17 Loss: -0.5537
Epoch 18 Loss: -0.5697
Epoch 19 Loss: -0.5855
Epoch 20 Loss: -0.6012
Epoch 21 Loss: -0.6165
Epoch 22 Loss: -0.6316
Epoch 23 Loss: -0.6463
Epoch 24 Loss: -0.6609
Epoch 25 Loss: -0.6751
Epoch 26 Loss: -0.6890
Epoch 27 Loss: -0.7026
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.16it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 18.02it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.92it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.89it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.64it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.91it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.79it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.98it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.98it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.95it/s]
Epoch 28 Loss: -0.7161
Epoch 29 Loss: -0.7292
Epoch 30 Loss: -0.7418