/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
num_shots is  1
num_shots is  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
Epoch 1 Loss: 0.7085 Alpha: tensor([0.1990, 0.1990, 0.1990, 0.1990, 0.1990, 0.1990, 0.1990],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 1 best val f1 0.4688 test f1 0.3068831264972687
Epoch 2 Loss: 0.7074 Alpha: tensor([0.1980, 0.1980, 0.1980, 0.1980, 0.1980, 0.1980, 0.1980],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 3 Loss: 0.7064 Alpha: tensor([0.1970, 0.1970, 0.1970, 0.1970, 0.1970, 0.1970, 0.1970],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 4 Loss: 0.7055 Alpha: tensor([0.1960, 0.1960, 0.1960, 0.1960, 0.1960, 0.1960, 0.1960],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 5 Loss: 0.7046 Alpha: tensor([0.1950, 0.1950, 0.1950, 0.1950, 0.1950, 0.1950, 0.1950],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 6 Loss: 0.7037 Alpha: tensor([0.1940, 0.1940, 0.1940, 0.1940, 0.1940, 0.1940, 0.1940],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 7 Loss: 0.7030 Alpha: tensor([0.1930, 0.1930, 0.1930, 0.1930, 0.1930, 0.1930, 0.1930],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 8 Loss: 0.7022 Alpha: tensor([0.1920, 0.1920, 0.1920, 0.1920, 0.1920, 0.1920, 0.1920],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 9 Loss: 0.7015 Alpha: tensor([0.1910, 0.1910, 0.1910, 0.1910, 0.1910, 0.1910, 0.1910],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 10 Loss: 0.7008 Alpha: tensor([0.1900, 0.1900, 0.1900, 0.1900, 0.1900, 0.1900, 0.1900],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 11 Loss: 0.7002 Alpha: tensor([0.1891, 0.1890, 0.1890, 0.1890, 0.1890, 0.1890, 0.1890],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 12 Loss: 0.6996 Alpha: tensor([0.1881, 0.1880, 0.1880, 0.1880, 0.1880, 0.1880, 0.1880],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 13 Loss: 0.6990 Alpha: tensor([0.1871, 0.1870, 0.1870, 0.1870, 0.1870, 0.1870, 0.1870],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 14 Loss: 0.6985 Alpha: tensor([0.1861, 0.1860, 0.1860, 0.1860, 0.1860, 0.1860, 0.1860],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 15 Loss: 0.6980 Alpha: tensor([0.1851, 0.1850, 0.1850, 0.1850, 0.1850, 0.1850, 0.1850],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 16 Loss: 0.6975 Alpha: tensor([0.1842, 0.1840, 0.1840, 0.1840, 0.1840, 0.1840, 0.1840],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 17 Loss: 0.6970 Alpha: tensor([0.1832, 0.1830, 0.1829, 0.1830, 0.1830, 0.1830, 0.1830],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 18 Loss: 0.6966 Alpha: tensor([0.1822, 0.1820, 0.1819, 0.1819, 0.1820, 0.1820, 0.1820],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 19 Loss: 0.6962 Alpha: tensor([0.1813, 0.1810, 0.1809, 0.1809, 0.1810, 0.1810, 0.1810],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 20 Loss: 0.6958 Alpha: tensor([0.1803, 0.1800, 0.1799, 0.1799, 0.1800, 0.1799, 0.1800],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 21 Loss: 0.6955 Alpha: tensor([0.1793, 0.1790, 0.1789, 0.1789, 0.1790, 0.1789, 0.1790],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 22 Loss: 0.6951 Alpha: tensor([0.1784, 0.1780, 0.1779, 0.1779, 0.1780, 0.1779, 0.1780],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 23 Loss: 0.6947 Alpha: tensor([0.1774, 0.1770, 0.1769, 0.1769, 0.1770, 0.1769, 0.1771],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 24 Loss: 0.6944 Alpha: tensor([0.1765, 0.1760, 0.1759, 0.1759, 0.1760, 0.1759, 0.1761],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 25 Loss: 0.6941 Alpha: tensor([0.1755, 0.1750, 0.1749, 0.1749, 0.1750, 0.1749, 0.1751],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 26 Loss: 0.6938 Alpha: tensor([0.1746, 0.1740, 0.1739, 0.1739, 0.1740, 0.1739, 0.1741],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 27 Loss: 0.6935 Alpha: tensor([0.1737, 0.1730, 0.1729, 0.1729, 0.1730, 0.1729, 0.1731],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 28 Loss: 0.6933 Alpha: tensor([0.1727, 0.1720, 0.1719, 0.1719, 0.1720, 0.1720, 0.1721],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 29 Loss: 0.6930 Alpha: tensor([0.1718, 0.1710, 0.1709, 0.1709, 0.1710, 0.1710, 0.1712],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 30 Loss: 0.6928 Alpha: tensor([0.1709, 0.1700, 0.1699, 0.1699, 0.1700, 0.1700, 0.1702],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 31 Loss: 0.6925 Alpha: tensor([0.1700, 0.1690, 0.1689, 0.1689, 0.1690, 0.1690, 0.1692],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 32 Loss: 0.6923 Alpha: tensor([0.1690, 0.1680, 0.1679, 0.1679, 0.1680, 0.1680, 0.1682],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 33 Loss: 0.6921 Alpha: tensor([0.1681, 0.1670, 0.1669, 0.1669, 0.1670, 0.1670, 0.1673],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 34 Loss: 0.6919 Alpha: tensor([0.1672, 0.1660, 0.1659, 0.1659, 0.1660, 0.1660, 0.1663],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 35 Loss: 0.6917 Alpha: tensor([0.1663, 0.1651, 0.1649, 0.1650, 0.1651, 0.1650, 0.1653],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 36 Loss: 0.6915 Alpha: tensor([0.1654, 0.1641, 0.1639, 0.1640, 0.1641, 0.1641, 0.1644],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 37 Loss: 0.6914 Alpha: tensor([0.1645, 0.1631, 0.1629, 0.1630, 0.1631, 0.1631, 0.1634],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 38 Loss: 0.6912 Alpha: tensor([0.1636, 0.1621, 0.1620, 0.1620, 0.1621, 0.1621, 0.1625],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 39 Loss: 0.6911 Alpha: tensor([0.1627, 0.1612, 0.1610, 0.1610, 0.1611, 0.1611, 0.1615],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 40 Loss: 0.6909 Alpha: tensor([0.1618, 0.1602, 0.1600, 0.1600, 0.1602, 0.1602, 0.1605],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 41 Loss: 0.6907 Alpha: tensor([0.1610, 0.1592, 0.1590, 0.1591, 0.1592, 0.1592, 0.1596],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 42 Loss: 0.6906 Alpha: tensor([0.1601, 0.1583, 0.1580, 0.1581, 0.1582, 0.1582, 0.1586],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 43 Loss: 0.6904 Alpha: tensor([0.1592, 0.1573, 0.1571, 0.1571, 0.1573, 0.1573, 0.1577],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 44 Loss: 0.6903 Alpha: tensor([0.1583, 0.1563, 0.1561, 0.1561, 0.1563, 0.1563, 0.1568],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 45 Loss: 0.6901 Alpha: tensor([0.1575, 0.1554, 0.1551, 0.1552, 0.1553, 0.1553, 0.1558],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 46 Loss: 0.6900 Alpha: tensor([0.1566, 0.1544, 0.1542, 0.1542, 0.1544, 0.1544, 0.1549],
       device='cuda:0', grad_fn=<SelectBackward0>)
Epoch 47 Loss: 0.6898 Alpha: tensor([0.1557, 0.1535, 0.1532, 0.1533, 0.1534, 0.1534, 0.1540],
       device='cuda:0', grad_fn=<SelectBackward0>)
Traceback (most recent call last):
  File "few_shot.py", line 82, in <module>
    main(configs[args.method], args.method)
  File "few_shot.py", line 58, in main
    metrics = method(dataset)
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yongxuan/SurgVLP/methods/linear_probe_plus.py", line 303, in forward
    val_metrics = self.get_val_metrics(val_loader)
  File "/home/yongxuan/SurgVLP/methods/linear_probe_plus.py", line 105, in get_val_metrics
    for val_images, val_labels in val_loader:
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 52, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/yongxuan/SurgVLP/datasets/utils.py", line 308, in __getitem__
    if torch.isnan(img).any():
KeyboardInterrupt
Epoch 48 Loss: 0.6897 Alpha: tensor([0.1549, 0.1525, 0.1522, 0.1523, 0.1525, 0.1525, 0.1530],
       device='cuda:0', grad_fn=<SelectBackward0>)