/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
  0%|                                                                          | 0/7 [00:00<?, ?it/s]
num_shots is  64


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:04<00:00,  1.61it/s]
Epoch 1 Loss: 1.2544
 14%|█████████▍                                                        | 1/7 [00:00<00:03,  1.96it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.93it/s]
Epoch 2 Loss: 0.2128
Epoch 2 best val f1 0.6083 test f1 0.3866662383079529

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.79it/s]
Epoch 3 Loss: -0.1708


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 4 Loss: -0.3367
  0%|                                                                          | 0/7 [00:00<?, ?it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 5 Loss: -0.4511

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 7 Loss: -0.6536
Epoch 7 best val f1 0.6654 test f1 0.40865808725357056

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  2.00it/s]
Epoch 9 Loss: -0.8010

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  2.00it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  2.00it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 11 Loss: -0.8846

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  2.00it/s]
Epoch 12 Loss: -0.9072

 71%|███████████████████████████████████████████████▏                  | 5/7 [00:02<00:01,  1.98it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 14 Loss: -0.9374

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]
Epoch 16 Loss: -0.9526

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  2.00it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.94it/s]
Epoch 18 Loss: -0.9609

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 20 Loss: -0.9662

 86%|████████████████████████████████████████████████████████▌         | 6/7 [00:03<00:00,  1.97it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.97it/s]


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 22 Loss: -0.9698

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 23 Loss: -0.9708


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 24 Loss: -0.9695

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.86it/s]
Epoch 25 Loss: -0.9707


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.93it/s]
Epoch 26 Loss: -0.9744

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 27 Loss: -0.9747


100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.98it/s]
Epoch 28 Loss: -0.9771

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]
Epoch 29 Loss: -0.9763

 71%|███████████████████████████████████████████████▏                  | 5/7 [00:02<00:01,  1.99it/s]

100%|██████████████████████████████████████████████████████████████████| 7/7 [00:03<00:00,  1.99it/s]