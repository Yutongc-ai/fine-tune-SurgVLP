/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
num_shots is  16
num_shots is  16
Epoch 1 Loss: 0.9989
Epoch 1 best val f1 0.3951 test f1 0.3057743310928345
Epoch 2 Loss: 0.9551
Epoch 3 Loss: 0.9189
Epoch 4 Loss: 0.8877
Epoch 5 Loss: 0.8603
Epoch 6 Loss: 0.8366
Epoch 7 Loss: 0.8159
Epoch 8 Loss: 0.7990
Epoch 9 Loss: 0.7813
Epoch 10 Loss: 0.7663
Epoch 11 Loss: 0.7531
Epoch 11 best val f1 0.3955 test f1 0.3057743310928345
Epoch 12 Loss: 0.7413
Epoch 13 Loss: 0.7301
Epoch 13 best val f1 0.3963 test f1 0.3057771325111389
Epoch 14 Loss: 0.7198
Epoch 14 best val f1 0.3979 test f1 0.30578139424324036
Epoch 15 Loss: 0.7109
Epoch 15 best val f1 0.4017 test f1 0.30578991770744324
Epoch 16 Loss: 0.7026
Epoch 16 best val f1 0.4081 test f1 0.30581122636795044
Epoch 17 Loss: 0.6947
Epoch 17 best val f1 0.4129 test f1 0.30586233735084534
Epoch 18 Loss: 0.6862
Epoch 19 Loss: 0.6793
Epoch 19 best val f1 0.4154 test f1 0.30604287981987
Epoch 20 Loss: 0.6724
Epoch 20 best val f1 0.4233 test f1 0.3062356412410736
Epoch 21 Loss: 0.6661
Epoch 21 best val f1 0.4354 test f1 0.3065328299999237
Epoch 22 Loss: 0.6593
Epoch 22 best val f1 0.4482 test f1 0.3069119453430176
Epoch 23 Loss: 0.6523
Epoch 23 best val f1 0.4571 test f1 0.3074198365211487
Epoch 24 Loss: 0.6466
Epoch 25 Loss: 0.6404
Epoch 26 Loss: 0.6342
Epoch 27 Loss: 0.6270
Epoch 28 Loss: 0.6207
Epoch 29 Loss: 0.6131
Epoch 30 Loss: 0.6073
Epoch 31 Loss: 0.6008
Epoch 32 Loss: 0.5950
Epoch 33 Loss: 0.5872
Epoch 34 Loss: 0.5829
Epoch 35 Loss: 0.5757
Epoch 36 Loss: 0.5695
Epoch 37 Loss: 0.5659
Epoch 38 Loss: 0.5614
Epoch 39 Loss: 0.5560
Epoch 40 Loss: 0.5539
Epoch 41 Loss: 0.5487
Epoch 42 Loss: 0.5451
Epoch 43 Loss: 0.5419
Epoch 44 Loss: 0.5389
Epoch 45 Loss: 0.5377
Epoch 46 Loss: 0.5369
Epoch 47 Loss: 0.5342
Epoch 48 Loss: 0.5314
Epoch 49 Loss: 0.5298
Epoch 50 Loss: 0.5313
Epoch 51 Loss: 0.5286
Epoch 52 Loss: 0.5276
Epoch 53 Loss: 0.5278
Epoch 54 Loss: 0.5266
Epoch 55 Loss: 0.5264
Epoch 56 Loss: 0.5247
Epoch 57 Loss: 0.5243
Epoch 58 Loss: 0.5238
Traceback (most recent call last):
  File "few_shot.py", line 76, in <module>
    main(configs[args.method], args.method)
  File "few_shot.py", line 52, in main
    metrics = method(dataset)
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yongxuan/SurgVLP/methods/linear_probe_plus.py", line 298, in forward
    val_metrics = self.get_val_metrics(val_loader)
  File "/home/yongxuan/SurgVLP/methods/linear_probe_plus.py", line 104, in get_val_metrics
    for val_images, val_labels in val_loader:
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 52, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/yongxuan/SurgVLP/datasets/utils.py", line 303, in __getitem__
    img0 = read_image(item.impath)
  File "/home/yongxuan/SurgVLP/datasets/utils.py", line 146, in read_image
    img = Image.open(path).convert('RGB')
  File "/home/yongxuan/.local/lib/python3.8/site-packages/PIL/Image.py", line 921, in convert
    self.load()
  File "/home/yongxuan/.local/lib/python3.8/site-packages/PIL/ImageFile.py", line 260, in load
    n, err_code = decoder.decode(b)
KeyboardInterrupt
Epoch 59 Loss: 0.5230