/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.94it/s]
num_shots is  4
num_shots is  4
Epoch 1 Loss: 1.8810
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.51it/s]
Epoch 1 best val f1 0.2597 test f1 0.23610851168632507
Epoch 2 Loss: 0.4337
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.53it/s]
Epoch 2 best val f1 0.3704 test f1 0.3915242850780487
Epoch 3 Loss: -0.0591
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
  0%|                                                                          | 0/1 [00:00<?, ?it/s]
Epoch 3 best val f1 0.5275 test f1 0.5025513768196106
Epoch 4 Loss: -0.2551
Epoch 5 Loss: -0.2818
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.53it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.54it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
Epoch 7 Loss: -0.3310
Epoch 7 best val f1 0.5361 test f1 0.5755648016929626
Epoch 8 Loss: -0.3482
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.58it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.58it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.57it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.58it/s]
Epoch 9 Loss: -0.3632
Epoch 10 Loss: -0.3773
Epoch 11 Loss: -0.3911
Epoch 12 Loss: -0.4049
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.54it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.52it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.53it/s]
  0%|                                                                          | 0/1 [00:00<?, ?it/s]
Epoch 13 Loss: -0.4187
Epoch 14 Loss: -0.4327
Epoch 15 Loss: -0.4469
Epoch 16 Loss: -0.4613
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.57it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.53it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.54it/s]
Epoch 18 Loss: -0.4904
Epoch 18 best val f1 0.5474 test f1 0.5986868739128113
Epoch 19 Loss: -0.5051
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.58it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.57it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.58it/s]
Epoch 20 Loss: -0.5199
Epoch 21 Loss: -0.5348
Epoch 22 Loss: -0.5497
Epoch 23 Loss: -0.5646
Epoch 24 Loss: -0.5794
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.56it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.56it/s]
Epoch 25 Loss: -0.5942
Epoch 26 Loss: -0.6089
Epoch 27 Loss: -0.6235
Epoch 28 Loss: -0.6378
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.55it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.56it/s]
Epoch 29 Loss: -0.6519
Epoch 30 Loss: -0.6658