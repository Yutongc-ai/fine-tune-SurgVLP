/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
  0%|                                                                         | 0/28 [00:00<?, ?it/s]
Epoch 0 test f1 0.28642749786376953
num_shots is  256








100%|████████████████████████████████████████████████████████████████| 28/28 [00:15<00:00,  1.76it/s]
Epoch 1 Loss: 0.5491
Epoch 1 best val f1 0.6818 test f1 0.37231338024139404






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.97it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
  4%|██▎                                                              | 1/28 [00:00<00:13,  1.99it/s]







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 3 Loss: -0.7115






 93%|███████████████████████████████████████████████████████████▍    | 26/28 [00:13<00:01,  2.00it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  2.00it/s]
Epoch 4 best val f1 0.7191 test f1 0.3619523346424103






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.99it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 6 Loss: -0.9344
Epoch 6 best val f1 0.7203 test f1 0.3886265158653259






 93%|███████████████████████████████████████████████████████████▍    | 26/28 [00:13<00:00,  2.00it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.99it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]






100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  2.00it/s]
Epoch 9 Loss: -0.9649







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 10 Loss: -0.9709







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  2.00it/s]
Epoch 11 Loss: -0.9737






 93%|███████████████████████████████████████████████████████████▍    | 26/28 [00:13<00:01,  2.00it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.99it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.98it/s]






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.99it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.98it/s]







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 15 Loss: -0.9779







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  2.00it/s]
Epoch 16 Loss: -0.9819







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 17 Loss: -0.9821






 93%|███████████████████████████████████████████████████████████▍    | 26/28 [00:13<00:01,  1.97it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.99it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 20 Loss: -0.9872







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 21 Loss: -0.9868







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 22 Loss: -0.9889






 93%|███████████████████████████████████████████████████████████▍    | 26/28 [00:13<00:01,  2.00it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  2.00it/s]






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.99it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  2.00it/s]







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]
Epoch 25 Loss: -0.9916







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.97it/s]
Epoch 26 Loss: -0.9920







100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  2.00it/s]
Epoch 27 Loss: -0.9918






 93%|███████████████████████████████████████████████████████████▍    | 26/28 [00:13<00:01,  1.99it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  2.00it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.99it/s]






 96%|█████████████████████████████████████████████████████████████▋  | 27/28 [00:13<00:00,  1.96it/s]

100%|████████████████████████████████████████████████████████████████| 28/28 [00:14<00:00,  1.98it/s]