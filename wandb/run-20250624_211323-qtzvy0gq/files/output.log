/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
 50%|█████████████████████████████████                                 | 1/2 [00:00<00:00,  1.70it/s]
num_shots is  16
num_shots is  16
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])

100%|██████████████████████████████████████████████████████████████████| 2/2 [00:01<00:00,  1.88it/s]
Epoch 1 best val f1 0.3416 test f1 0.39325112104415894
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.26it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 2 Loss: 0.4145
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
Epoch 2 best val f1 0.5372 test f1 0.5091725587844849
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])

100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
 50%|█████████████████████████████████                                 | 1/2 [00:00<00:00,  1.93it/s]
Epoch 3 best val f1 0.5855 test f1 0.4554372727870941
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.23it/s]
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 5 Loss: -0.2861
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.24it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 6 Loss: -0.3154
torch.Size([64, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.23it/s]
torch.Size([48, 49, 768])
Epoch 7 Loss: -0.3495
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
Epoch 8 Loss: -0.3782
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
 50%|█████████████████████████████████                                 | 1/2 [00:00<00:00,  2.01it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 12 Loss: -0.4919
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.25it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 13 Loss: -0.5214
torch.Size([64, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.26it/s]
torch.Size([48, 49, 768])
Epoch 14 Loss: -0.5496
torch.Size([64, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.27it/s]
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
torch.Size([48, 49, 768])
Epoch 15 Loss: -0.5832
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.08it/s]
 50%|█████████████████████████████████                                 | 1/2 [00:00<00:00,  1.99it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.00it/s]
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.26it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 20 Loss: -0.7109
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.27it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 21 Loss: -0.7412
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 22 Loss: -0.7572
torch.Size([64, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.27it/s]
torch.Size([48, 49, 768])
Epoch 23 Loss: -0.7776
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 24 Loss: -0.7917
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.27it/s]
  0%|                                                                          | 0/2 [00:00<?, ?it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.05it/s]
 50%|█████████████████████████████████                                 | 1/2 [00:00<00:00,  1.95it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.26it/s]
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 28 Loss: -0.8492
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 29 Loss: -0.8600
100%|██████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.28it/s]
torch.Size([64, 49, 768])
torch.Size([48, 49, 768])
Epoch 30 Loss: -0.8679