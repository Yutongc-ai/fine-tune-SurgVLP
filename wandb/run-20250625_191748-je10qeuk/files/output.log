/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
num_shots is  1
num_shots is  1
tensor([[0.5381, 0.5883, 0.5839, 0.3086, 0.5878, 0.3556, 0.3723],
        [0.6690, 0.5018, 0.5692, 0.7722, 0.3942, 0.5676, 0.4980],
        [0.5926, 0.4872, 0.4427, 0.6352, 0.3125, 0.6298, 0.4937],
        [0.7031, 0.5508, 0.8477, 0.4580, 0.5730, 0.5032, 0.5039],
        [0.6390, 0.5164, 0.5500, 0.3466, 0.7919, 0.4074, 0.4021],
        [0.7407, 0.5393, 0.6004, 0.5624, 0.6443, 0.4988, 0.4595],
        [0.6253, 0.6517, 0.5512, 0.5056, 0.4068, 0.7081, 0.7233]],
       device='cuda:0', grad_fn=<MmBackward0>)
tensor([[-0.0242, -0.0064, -0.0189,  0.0125, -0.0339, -0.0243, -0.0024],
        [-0.0030,  0.0175, -0.0336, -0.0194, -0.0188,  0.0016, -0.0256],
        [-0.0426,  0.0253, -0.0548, -0.0418, -0.0357, -0.0374, -0.0112],
        [-0.0391,  0.0052, -0.0478,  0.0086, -0.0366,  0.0295, -0.0221],
        [ 0.0063,  0.0101, -0.0012, -0.0099, -0.0063, -0.0229, -0.0162],
        [ 0.0024,  0.0017, -0.0031, -0.0127,  0.0177, -0.0055,  0.0058],
        [-0.0456,  0.0302, -0.0336, -0.0393, -0.0161, -0.0095, -0.0128]],
       device='cuda:0', grad_fn=<MulBackward0>)
tensor([1.2000, 1.2000, 1.2000, 1.2000, 1.2000, 1.2000, 1.2000],
       device='cuda:0', grad_fn=<AddBackward0>)
tensor([[0.5138, 0.5819, 0.5650, 0.3211, 0.5540, 0.3313, 0.3699],
        [0.6660, 0.5194, 0.5357, 0.7528, 0.3754, 0.5692, 0.4725],
        [0.5500, 0.5125, 0.3880, 0.5935, 0.2768, 0.5924, 0.4825],
        [0.6641, 0.5560, 0.7999, 0.4667, 0.5363, 0.5327, 0.4819],
        [0.6453, 0.5265, 0.5489, 0.3366, 0.7857, 0.3845, 0.3859],
        [0.7431, 0.5410, 0.5973, 0.5497, 0.6620, 0.4933, 0.4653],
        [0.5796, 0.6819, 0.5177, 0.4662, 0.3907, 0.6986, 0.7105]],
       device='cuda:0', grad_fn=<AddBackward0>)
tensor([[0.4282, 0.4849, 0.4708, 0.2676, 0.4616, 0.2761, 0.3083],
        [0.5550, 0.4328, 0.4464, 0.6274, 0.3128, 0.4744, 0.3937],
        [0.4583, 0.4270, 0.3233, 0.4945, 0.2307, 0.4937, 0.4021],
        [0.5534, 0.4633, 0.6665, 0.3889, 0.4470, 0.4439, 0.4016],
        [0.5378, 0.4388, 0.4574, 0.2805, 0.6547, 0.3204, 0.3216],
        [0.6192, 0.4508, 0.4977, 0.4581, 0.5517, 0.4111, 0.3878],
        [0.4830, 0.5683, 0.4314, 0.3885, 0.3256, 0.5822, 0.5920]],
       device='cuda:0', grad_fn=<DivBackward0>)
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
Traceback (most recent call last):
  File "few_shot.py", line 82, in <module>
    main(configs[args.method], args.method)
  File "few_shot.py", line 58, in main
    metrics = method(dataset)
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yongxuan/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yongxuan/SurgVLP/methods/linear_probe_plus.py", line 290, in forward
    logits = self.compute_training_logits(image_features)
  File "/home/yongxuan/SurgVLP/methods/linear_probe_plus.py", line 158, in compute_training_logits
    assert(0)
AssertionError