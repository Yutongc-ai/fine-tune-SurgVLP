/home/yongxuan/anaconda3/envs/clip/lib/python3.8/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/yongxuan/SurgVLP/datasets/utils.py:74: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(f"{cfg.cache_dir}/{split}local_f_part{part_idx}.pt")
loading num parts:  0
loading num parts:  1
/home/yongxuan/SurgVLP/datasets/utils.py:75: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  labels = torch.load(f"{cfg.cache_dir}/{split}local_l_part{part_idx}.pt")
loading num parts:  2
loading num parts:  3
loading num parts:  4
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 14.52it/s]
num_shots is  1
num_shots is  1
Epoch 1 Loss: 0.9576
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 12.90it/s]
Epoch 1 best val f1 0.2857 test f1 0.2402493953704834
Epoch 2 Loss: 1.0682
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.94it/s]
Epoch 2 best val f1 0.3158 test f1 0.3370174467563629
Epoch 3 Loss: 0.2750
Epoch 3 best val f1 0.5217 test f1 0.44566017389297485
Epoch 4 Loss: -0.2578
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 12.21it/s]
Epoch 4 best val f1 0.5600 test f1 0.4830617606639862
Epoch 5 Loss: -0.3247
Epoch 6 Loss: -0.3587
Epoch 7 Loss: -0.3766
Epoch 8 Loss: -0.3928
Epoch 9 Loss: -0.4082
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 12.83it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.07it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.06it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.83it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.72it/s]
Epoch 9 best val f1 0.6154 test f1 0.4924604594707489
Epoch 10 Loss: -0.4220
Epoch 11 Loss: -0.4358
Epoch 12 Loss: -0.4525
Epoch 13 Loss: -0.4696
Epoch 14 Loss: -0.4854
Epoch 15 Loss: -0.5004
Epoch 16 Loss: -0.5150
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.31it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.10it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.08it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.03it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.13it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.10it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.10it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.08it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.97it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.84it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.20it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.10it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.05it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.22it/s]
Epoch 17 Loss: -0.5292
Epoch 18 Loss: -0.5434
Epoch 19 Loss: -0.5579
Epoch 20 Loss: -0.5725
Epoch 21 Loss: -0.5870
Epoch 22 Loss: -0.6014
Epoch 23 Loss: -0.6157
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.39it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.12it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.45it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.76it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.13it/s]
  0%|                                                                          | 0/1 [00:00<?, ?it/s]
Epoch 23 best val f1 0.6429 test f1 0.5214856266975403
Epoch 24 Loss: -0.6298
Epoch 25 Loss: -0.6436
Epoch 26 Loss: -0.6573
Epoch 27 Loss: -0.6707
Epoch 28 Loss: -0.6840
Epoch 29 Loss: -0.6970
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 16.99it/s]
100%|██████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 17.07it/s]